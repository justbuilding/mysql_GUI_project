
课程设计实验六 软件需求分析1

  一、实验目的
     通过实验了解软件工程中的需求分析方法，包括数据流分析、面向对象分析方法，为数据库设计的需求分析提供基础。
  
  二、实验原理
      
         从工程学角度来看，软件开发是一项工程，工程设计需要建模。数据库设计需要建立概念模型（ER实体关系模型），没有概念模型（ER模型）就无法进行数据库设计。
		 大部分的软件工程都包括了数据库，因此数据库设计与软件设计之间可能会存在冲突。需要将数据库设计与软件设计统一，需要一个统一的需求分析模型。
		 
		  软件工程的生命周期（开发流程）：需求分析 ->系统分析 —>设计 ->编码 -> 测试 ->维护
       注意实际上不可能严格按此流程按部就班，大部分情况是迭代式开发。	   
	     任何一项的工程设计都要有明确具体的需求（设计规约），即要设计什么样的系统，有那些功能等。需求不清晰甚至不正确是软件开发失败的主要原因。
		 
     软件需求分析是技术也是艺术（没有其他工程需求精细）。
         软件需求分析一般分为概念建模方法及形式化方法。
       	  形式化方法：用数理逻辑方法对于软件工程进行需求规约。这是理想化的方法，在实际应用中很难做到，只应用于安全性要求高的小系统。
          概念建模方法：
               1.结构化分析方法（数据流方法）
               2.面向对象分析方法（一般用统一建模方法UML表达）
			  注意这些方法不是对立的有些场景适合数据流方法，有些场景更加适合UML方法，甚至交叉使用也是可以的。
			  ER实体关系模型。
			
  三、实验平台
       Win7, Microsoft Visio(软件辅助设计工具CASE）
   
  四、实验内容及方法
     (一）虚拟场景 -商贸系统
	      客户下订单订购产品，系统处理产品订单，每份订单都由一位员工处理，产品由运货商运货， 产品由不同的供应商供应。
	     客户信息
         产品信息
         订单信息
         员工信息
		 运货商
         供应商		 
	


		  
	 
    （二）采用结构化分析方法-数据流方法，进行需求分析
	      
		  1.数据流图要素
		   数据流图(DFD,Data Flow Diagram),有4个基本要素：
		    1）.外部实体（数据源/汇） -例如客户
	        2）.处理(Process)
			3）.数据流(Data Flow)
			4）.数据存储
			
	     2.设计原则 -分层（复杂问题的求解），“黑箱”方法，输入输出
		     自顶向下，逐层分解（抽象--> 具体）
			 自下而上，逐层合并（具体->抽象）
			 在较低层的图中显示高层图的具体实现，要保证图层间输入输出的一致性。
		  
		  分解：一般是对处理进行分解，
		     例如商贸系统-> 1 销售子系统，2 采购子系统，3 仓库管理，...
			 
		  4 财务子系统 等等
		   
		     1销售子系统可以进一步分为 1.1 订单管理，1.2 收发货管理,1.3销售计划等
			 1.1 订单管理
                  可以进一步分为 1.1.1 创建新订单，1.1.2 修改订单， 1.1.3 撤销订单 等等
				  

    
	
	   
	  
		

五、扩展实验
  采用面向对象的统一建模方法UML，进行需求分析
    用例图，活动图等
	
		 
